/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'java'
    id 'maven-publish'
    id 'org.jetbrains.kotlin.jvm' version '1.7.20'
    id 'org.jetbrains.dokka' version '1.7.20'
}

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url = 'https://m2.dv8tion.net/releases'
    }
    maven {
        url = 'https://jitpack.io'
    }
}

dependencies {
    implementation 'org.slf4j:slf4j-api:2.0.4'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core-jvm:1.6.4'
    implementation 'javax.annotation:javax.annotation-api:1.3.2'
    implementation 'org.json:json:20220924'
    implementation 'org.jetbrains.kotlin:kotlin-reflect:1.7.20'
    implementation 'com.ibm.icu:icu4j:72.1'
    compileOnly 'net.dv8tion:JDA:5.0.0-beta.1'


    // Spring dependencies for autoconfiguration in a spring project
    compileOnly 'org.springframework:spring-context:6.0.0'
    compileOnly 'org.springframework.boot:spring-boot-autoconfigure:2.7.5'
}

group = 'com.mrkirby153'
version = '6.0-SNAPSHOT'
sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

java {
    withSourcesJar()
    withJavadocJar()
}

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

javadocJar.dependsOn dokkaJavadoc
javadocJar.from dokkaJavadoc


String propertyOrEnv(property, env) {
    return project.hasProperty(property)? project.properties[property] : System.getenv(env)
}

def publishUrl() {
    if(project.version.endsWith('-SNAPSHOT'))
        return "https://repo.mrkirby153.com/repository/maven-snapshots/"
    else
        return "https://repo.mrkirby153.com/repository/maven-releases/"
}

publishing {
    tasks.publish.dependsOn build
    repositories {
        maven {
            name = "mrkirby153"
            url = publishUrl()
            credentials {
                username propertyOrEnv('repositoryUsername', 'REPO_USERNAME')
                password propertyOrEnv('repositoryPassword', 'REPO_PASS')
            }
        }
    }
}
compileKotlin {
    kotlinOptions {
        jvmTarget = "17"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "17"
    }
}

tasks.dokkaHtml.configure {
    suppressInheritedMembers.set(true)
}

tasks.withType(org.gradle.jvm.tasks.Jar) {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}